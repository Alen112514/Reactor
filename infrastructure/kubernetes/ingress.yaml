apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mcp-router-ingress
  namespace: mcp-router
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  tls:
  - hosts:
    - mcp-router.local
    secretName: mcp-router-tls
  rules:
  - host: mcp-router.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: mcp-router-backend-service
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mcp-router-frontend-service
            port:
              number: 3000

---
apiVersion: v1
kind: Secret
metadata:
  name: mcp-router-tls
  namespace: mcp-router
type: kubernetes.io/tls
data:
  # Replace with your actual TLS certificate and key (base64 encoded)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t... # Replace with actual certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t... # Replace with actual private key